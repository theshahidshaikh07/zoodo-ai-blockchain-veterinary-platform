{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_e531dabc-module__QGiZLq__className\",\n  \"variable\": \"geist_e531dabc-module__QGiZLq__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_e531dabc.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist%22,%22arguments%22:[{%22variable%22:%22--font-geist-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist', 'Geist Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"geist_mono_68a01160-module__YLcDdW__className\",\n  \"variable\": \"geist_mono_68a01160-module__YLcDdW__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 39, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/geist_mono_68a01160.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Geist_Mono%22,%22arguments%22:[{%22variable%22:%22--font-geist-mono%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22geistMono%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Geist Mono', 'Geist Mono Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,0JAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,0JAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,0JAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thesh/Desktop/zoodo-ai-blockchain-veterinary-platform/frontend/src/app/providers.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/providers.tsx <module evaluation>\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,uDACA","debugId":null}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thesh/Desktop/zoodo-ai-blockchain-veterinary-platform/frontend/src/app/providers.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/providers.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,YAAY,CAAA,GAAA,6OAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,mCACA","debugId":null}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thesh/Desktop/zoodo-ai-blockchain-veterinary-platform/frontend/src/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\nimport \"./globals.css\";\nimport { Providers } from \"./providers\";\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Zoodo\",\n  description: \"AI-powered pet healthcare platform with blockchain security\",\n  viewport: \"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover\",\n  icons: {\n    icon: [\n      {\n        url: '/favicon.ico',\n        sizes: 'any',\n        media: '(prefers-color-scheme: light)',\n      },\n      {\n        url: '/favicon-light.ico',\n        sizes: 'any',\n        media: '(prefers-color-scheme: dark)',\n      },\n      {\n        url: '/Z.png',\n        sizes: '32x32',\n        type: 'image/png',\n        media: '(prefers-color-scheme: light)',\n      },\n      {\n        url: '/Z-light.png',\n        sizes: '32x32',\n        type: 'image/png',\n        media: '(prefers-color-scheme: dark)',\n      },\n      {\n        url: '/Z.png',\n        sizes: '16x16',\n        type: 'image/png',\n        media: '(prefers-color-scheme: light)',\n      },\n      {\n        url: '/Z-light.png',\n        sizes: '16x16',\n        type: 'image/png',\n        media: '(prefers-color-scheme: dark)',\n      },\n    ],\n    shortcut: [\n      {\n        url: '/Z.png',\n        media: '(prefers-color-scheme: light)',\n      },\n      {\n        url: '/Z-light.png',\n        media: '(prefers-color-scheme: dark)',\n      },\n    ],\n    apple: [\n      {\n        url: '/Z.png',\n        media: '(prefers-color-scheme: light)',\n      },\n      {\n        url: '/Z-light.png',\n        media: '(prefers-color-scheme: dark)',\n      },\n    ],\n  },\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" className=\"h-full\" suppressHydrationWarning>\n      <head>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, viewport-fit=cover\" />\n        <meta\n          name=\"format-detection\"\n          content=\"telephone=no, date=no, email=no, address=no\"\n        />\n        <script\n          dangerouslySetInnerHTML={{\n            __html: `\n              (function() {\n                try {\n                  var theme = localStorage.getItem('theme');\n                  \n                  // Only set theme if it's explicitly set, otherwise let next-themes handle it\n                  if (theme && theme !== 'system') {\n                    if (theme === 'dark') {\n                      document.documentElement.classList.add('dark');\n                    } else {\n                      document.documentElement.classList.remove('dark');\n                    }\n                  }\n                } catch (e) {\n                  // Silent fallback\n                }\n              })();\n            `,\n          }}\n        />\n      </head>\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased h-full min-h-screen bg-background`}\n        suppressHydrationWarning\n      >\n        <Providers>\n          {children}\n        </Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAGA;;;;;;AAYO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;IACb,UAAU;IACV,OAAO;QACL,MAAM;YACJ;gBACE,KAAK;gBACL,OAAO;gBACP,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;gBACP,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;gBACP,MAAM;gBACN,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;gBACP,MAAM;gBACN,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;gBACP,MAAM;gBACN,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;gBACP,MAAM;gBACN,OAAO;YACT;SACD;QACD,UAAU;YACR;gBACE,KAAK;gBACL,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;YACT;SACD;QACD,OAAO;YACL;gBACE,KAAK;gBACL,OAAO;YACT;YACA;gBACE,KAAK;gBACL,OAAO;YACT;SACD;IACH;AACF;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,WAAU;QAAS,wBAAwB;;0BACzD,8OAAC;;kCACC,8OAAC;wBAAK,MAAK;wBAAW,SAAQ;;;;;;kCAC9B,8OAAC;wBACC,MAAK;wBACL,SAAQ;;;;;;kCAEV,8OAAC;wBACC,yBAAyB;4BACvB,QAAQ,CAAC;;;;;;;;;;;;;;;;;YAiBT,CAAC;wBACH;;;;;;;;;;;;0BAGJ,8OAAC;gBACC,WAAW,GAAG,yIAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,CAAC,EAAE,8IAAA,CAAA,UAAS,CAAC,QAAQ,CAAC,8CAA8C,CAAC;gBACtG,wBAAwB;0BAExB,cAAA,8OAAC,wHAAA,CAAA,YAAS;8BACP;;;;;;;;;;;;;;;;;AAKX","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/thesh/Desktop/zoodo-ai-blockchain-veterinary-platform/frontend/node_modules/next/src/server/route-modules/app-page/vendored/rsc/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-rsc']!.ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":"AAAAA,OAAOC,OAAO,GACZC,QAAQ,4HACRC,QAAQ,CAAC,YAAY,CAAEC,kBAAkB","ignoreList":[0],"debugId":null}}]
}